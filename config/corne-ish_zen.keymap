/*
*
* Copyright (c) 2021 Darryl deHaan
* SPDX-License-Identifier: MIT
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2

&mt {
    tapping-term-ms = <200>;
};

/ {
    combos {
        compatible = "zmk,combos";
        combo_quot {
            timeout-ms = <50>;
            key-positions = <16 17>;
            bindings = <&kp SQT>;
        };
        combo_dquot {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp DQT>;
        };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T   |   |  Y  |  U   |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G   |   |  H  |  J   |  K  |  L  |  ;  |
// |  Z  |  X  |  C  |  V  |  B   |   |  N  |  M   |  ,  |  .  |  /  |
//             | ALT | LWR | SPAC |   | BSC | RSE  | CTL |
                        bindings = <
   &none &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P &none
   &none &mt LGUI A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &mt RGUI SEMI &none
   &none &mt LSHFT Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &mt RSHFT FSLH &none
          &mt LALT ESC &lt LOWER TAB &kp SPACE &kp BSPC &lt RAISE ENTER &kp RCTRL
                        >;
                };
                nav_layer {
// -----------------------------------------------------------------------------------------
// |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |
// |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |
// | BT2 |     |     |      |     |   |  \  | ENT  |      |     |      |
//             |     |      |     |   |     |      |      |
                        bindings = <
   &none &kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &none
   &none &mt LGUI N1 &kp N2 &kp N3 &kp N4 &kp N5      &kp N6 &kp N7 &kp N8 &kp N9 &mt RGUI N0 &none
   &none &kp LSHFT &kp C_VOL_DN      &kp C_VOL_UP   &kp C_PREV    &none     &none &kp C_NEXT  &kp C_PP   &kp C_STOP    &kp RSHFT &none
                            &trans   &trans    &trans     &trans   &trans   &trans
                        >;
                };

                sym_layer {
// -----------------------------------------------------------------------------------------
// |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |
// |     |     |     |     |     |   |  -  |  =  |  {  |  }  | "|" |
// |     |     |     |     |     |   |  _  |  +  |  [  |  ]  |  \  |
//             | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &none &kp PSCRN  &kp HOME    &kp UP  &kp PG_UP        &none   &kp TILDE &kp KP_PLUS  &kp KP_EQUAL &kp LBKT &kp RBKT &none
   &none &kp LALT    &kp LEFT    &kp DOWN    &kp RIGHT    &none      &kp GRAVE &kp MINUS &kp UNDER        &kp LBRC &kp RBRC &none
   &none &kp LSHFT    &kp END    &none    &kp PG_DN    &none      &kp PIPE    &kp NON_US_BSLH    &kp LT          &kp GT   &kp RSHFT &none
                       &kp LGUI  &trans    &trans   &trans   &trans    &trans
                        >;
                };

// This layer is unreachable until "tri layer state" is sorted out.
// Leaving it here for completeness.
                num_layer {
// -----------------------------------------------------------------------------------------
// |     |     |     |     |     |   |  A  |  7  |  8  |  9  |  D  |
// |     |     |     |     |     |   |  B  |  4  |  5  |  6  |  E  |
// |     |     |     |     |     |   |  C  |  1  |  2  |  3  |  F  |
//             |     |     |     |   |  0  |  .  |     |
                        bindings = <
   &none &trans &trans &trans &trans &trans    &kp A  &kp N7  &kp N8 &kp N9 &kp D &none
   &none &trans &trans &trans &trans &trans    &kp B  &kp N4  &kp N5 &kp N6 &kp E &none
   &none &trans &trans &trans &trans &trans    &kp C  &kp N1  &kp N2 &kp N3 &kp F &none
                 &trans &trans &trans    &kp N0 &kp DOT &trans
                        >;
                };
        };
};
